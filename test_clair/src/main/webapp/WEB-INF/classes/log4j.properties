# spring 프레임워크 5버전은 web.xml에서 파일생성에 필요한 listener를 사용할 수 없고, 대신 properties 설정만으로 파일 생성이 가능하다.
# Log4J Properties : 실서버 운영 시 INFO, 모든 레벨의 로그를 보고 싶으면 DEBUG(레벨이 DEBUG로 되어 있으면 서버 리소스 많이 사용함)
log4j.rootLogger = DEBUG, stdout, dailyfile
# 표준 출력 설정
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
# 로그 출력 패턴: %p=로그타입(info 등), %d=로그발생시각{포매터}, %C=로그발생클래스, %m=로그내용, %n=개행
log4j.appender.stdout.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %C - %m%n
# 일별 로그 설정
log4j.appender.dailyfile.Threshold = DEBUG
log4j.appender.dailyfile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyfile.File = C:/log/logfile.log
log4j.appender.dailyfile.layout = org.apache.log4j.PatternLayout
# 로그 출력 패턴
log4j.appender.dailyfile.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %C - %m%n
# Append값이 true이면 날마다 새로운 파일 생성, false이면 기존 파일 덮어씀
log4j.appender.dailyfile.Append=true
# 날짜별 파일명 패턴
log4j.appender.dailyfile.DatePattern='.'yyyy-MM-dd